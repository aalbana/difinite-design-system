// Imports
@import './design-token/border-radius.scss';
@import './design-token/color.scss';
@import './design-token/shadow.scss';
@import './design-token/spacing.scss';
@import './design-token/typography.scss';
@import './design-token/sizing.scss';

@import './reset.css';

body {
    font-family: $font-family;
}

// Button Component =========================================
.button {
    display: flex;
    padding: $button-padding;
    justify-content: center;
    align-items: center;
    gap: $spacing-2;
    cursor: pointer;
    font-weight: $button-font-weight;
    line-height: $button-medium-line-height;
    border-radius: $button-border-radius;

    transition: background-color 0.3s, box-shadow 0.3s;
    
    i, svg {
        font-size: $button-icon-font-size;
        width: $button-icon-font-size;
        height: $button-icon-font-size;
    }
}

@mixin button-focus($focus-color) {
    outline: 1px $focus-color;
    box-shadow: 0px 0px 0px 4px rgba($focus-color, $opacity-50);
  }

@mixin button-style($background-color, $text-color){
    background-color: $background-color;
    color: $text-color;
}

// Button Color Variant

$button-variants: (
  primary: (
    background-color: $button-primary-background-color,
    hover-background-color: $button-primary-hover-background-color,
    active-background-color: $button-primary-active-background-color,
    focus-border-color: $button-primary-focus-border-color,
    
    disabled-background-color: $button-primary-disabled-background-color,

    outline-border-color: $button-primary-outline-border-color,
    outline-text-color: $button-primary-outline-text-color,
    outline-hover-background-color: $button-primary-outline-hover-background-color,

    outline-disabled-text-color: $button-primary-outline-disabled-text-color,
    outline-disabled-border-color: $button-primary-outline-disabled-border-color,
  ),
  secondary: (
    background-color: $button-secondary-background-color,
    hover-background-color: $button-secondary-hover-background-color,
    active-background-color: $button-secondary-active-background-color,
    focus-border-color: $button-secondary-focus-border-color,

    disabled-background-color: $button-secondary-disabled-background-color,

    outline-border-color: $button-secondary-outline-border-color,
    outline-text-color: $button-secondary-outline-text-color,
    outline-hover-background-color: $button-secondary-outline-hover-background-color,

    outline-disabled-text-color: $button-secondary-outline-disabled-text-color,
    outline-disabled-border-color: $button-secondary-outline-disabled-border-color,
  ),
  success: (
    background-color: $button-success-background-color,
    hover-background-color: $button-success-hover-background-color,
    active-background-color: $button-success-active-background-color,

    disabled-background-color: $button-success-disabled-background-color,

    focus-border-color: $button-success-focus-border-color,
    outline-border-color: $button-success-outline-border-color,
    outline-text-color: $button-success-outline-text-color,
    outline-hover-background-color: $button-success-outline-hover-background-color,

    outline-disabled-text-color: $button-success-outline-disabled-text-color,
    outline-disabled-border-color: $button-success-outline-disabled-border-color,
  ),
  warning: (
    background-color: $button-warning-background-color,
    hover-background-color: $button-warning-hover-background-color,
    active-background-color: $button-warning-active-background-color,
    focus-border-color: $button-warning-focus-border-color,
    
    disabled-background-color: $button-warning-disabled-background-color,

    outline-border-color: $button-warning-outline-border-color,
    outline-text-color: $button-warning-outline-text-color,
    outline-hover-background-color: $button-warning-outline-hover-background-color,

    outline-disabled-text-color: $button-warning-outline-disabled-text-color,
    outline-disabled-border-color: $button-warning-outline-disabled-border-color,
  ),
  danger: (
    background-color: $button-danger-background-color,
    hover-background-color: $button-danger-hover-background-color,
    active-background-color: $button-danger-active-background-color,
    focus-border-color: $button-danger-focus-border-color,
    
    disabled-background-color: $button-danger-disabled-background-color,

    outline-border-color: $button-danger-outline-border-color,
    outline-text-color: $button-danger-outline-text-color,
    outline-hover-background-color: $button-danger-outline-hover-background-color,

    outline-disabled-text-color: $button-danger-outline-disabled-text-color,
    outline-disabled-border-color: $button-danger-outline-disabled-border-color,

  ),
);


.button {
  @include button-style(map-get(map-get($button-variants, primary), background-color), $button-text-color);
  border: none;

  &:hover {
    background-color: map-get(map-get($button-variants, primary), hover-background-color);
  }

  &:active {
    background-color: map-get(map-get($button-variants, primary), active-background-color);
  }

  &:focus {
    @include button-focus(map-get(map-get($button-variants, primary), focus-border-color));
  }
}

@each $variant, $styles in $button-variants {
  .button.button-#{$variant} {
    @include button-style(map-get($styles, background-color), $button-text-color);
    border: none;

    &:hover {
      background-color: map-get($styles, hover-background-color);
    }

    &:active {
      background-color: map-get($styles, active-background-color);
    }

    &:focus {
      @include button-focus(map-get($styles, focus-border-color));
    }
  }
}

//Button Outline Style
.button.button-outline {
  @include button-style(transparent, $button-primary-outline-text-color);
  border: 1px solid $button-primary-outline-border-color;

  &:hover {
    background-color: $button-primary-outline-hover-background-color;
    color: $button-text-color;
    
    i, svg {
      color: $button-text-color;
    }
  }

  &:active {
    background-color: $button-primary-active-background-color;
    color: $button-text-color;
  }

  &:focus {
    @include button-focus($button-primary-focus-border-color);
  }

  i, svg {
    color: $button-primary-outline-text-color;
    font-size: $button-icon-font-size;
    width: $button-icon-font-size;
    height: $button-icon-font-size;
  }
}

@each $variant, $styles in $button-variants {
  .button.button-#{$variant}.button-outline {
    @include button-style(transparent, map-get($styles, outline-text-color));
    border: 1px solid map-get($styles, outline-border-color);
  
    &:hover {
      background-color: map-get($styles, outline-hover-background-color);
      color: $button-text-color;
      
      i, svg {
        color: $button-text-color;
      }
    }
  
    &:active {
      background-color: map-get($styles, active-background-color);
      color: $button-text-color;
    }
  
    &:focus {
      @include button-focus(map-get($styles, focus-border-color));
    }

    i, svg {
      color: map-get($styles, outline-text-color);
      font-size: $button-icon-font-size;
      width: $button-icon-font-size;
      height: $button-icon-font-size;
    }
  }  
}


// Button Sizes
$button-sizes: (
  sm: (
    font-size: $button-small-font-size,
    line-height: $button-small-line-height,
    square-size: $button-square-small-size,
  ),
  md: (
    font-size: $button-medium-font-size,
    line-height: $button-medium-line-height,
    square-size: $button-square-medium-size,
  ),
  lg: (
    font-size: $button-large-font-size,
    line-height: $button-large-line-height,
    square-size: $button-square-large-size,
  ),
);

.button {
  font-size: map-get(map-get($button-sizes, md), font-size);
  line-height: map-get(map-get($button-sizes, md), line-height);
}

@each $size, $style in $button-sizes {
  .button.button-#{$size} {
    font-size: map-get($style, font-size);
    line-height: map-get($style, line-height);
  }
}

// Square Button for Icon Only

.button-square {
    width: map-get(map-get($button-sizes, md), square-size);
    height: map-get(map-get($button-sizes, md), square-size);
  }

@each $size, $style in $button-sizes {
  .button-square.button-#{$size} {
    width: map-get($style, square-size);
    height: map-get($style, square-size);
  }
}

// Disabled Button
.button.disabled, .button:disabled {
  @include button-style($button-primary-disabled-background-color, $button-text-color);
  border: none;
  cursor: not-allowed;
  box-shadow: none;

  &:hover {
    @include button-style($button-primary-disabled-background-color, $button-text-color);
  }
}

@each $variant, $style in $button-variants {
  .button.button-#{$variant}.disabled, .button.button-#{$variant}:disabled {
    @include button-style(map-get($style, disabled-background-color), $button-text-color);
    border: none;
    cursor: not-allowed;
    box-shadow: none;

    &:hover {
      @include button-style(map-get($style, disabled-background-color), $button-text-color);
    }
  }
}

// Disabled Outlined Button

.button.button-outline.disabled, .button.button.button-outline:disabled {
  @include button-style(transparent, $button-primary-outline-disabled-text-color);
    border: 1px solid $button-primary-outline-disabled-border-color;
    cursor: not-allowed;
    box-shadow: none;
}

@each $variant, $style in $button-variants {
  .button.button-#{$variant}.button-outline.disabled, .button.button-#{$variant}.button-outline:disabled {
    @include button-style(transparent, map-get($style, outline-disabled-text-color));
    border: 1px solid map-get($style, outline-disabled-border-color);
    cursor: not-allowed;
    box-shadow: none;
  }
}

// Input Field ====================================

@mixin input-focus($focus-color) {
  outline: 1px solid $focus-color;
  box-shadow: 0px 0px 0px 4px rgba($focus-color, $opacity-50);
}

input[type="text"], input[type="password"], textarea{
  padding: $input-padding;
  border-radius: $input-border-radius;
  border: 1px solid $input-border-color;
  font-size: $input-font-size;
  line-height: $input-line-height;
  color: $input-font-color;
  transition: box-shadow 0.3s;

  &::placeholder{
    color: $input-placeholder-font-color;
  }

  &:focus {
    @include input-focus($input-focus-border-color)
  }
}

.input-control {
  position: relative;

  input[type="password"], .password-input {
    padding-right: $password-input-right-padding;
  }

  i, svg, img {
    position: absolute;
    color: $input-font-color;
    right: 12px;
    top: 50%;
    transform: translate(0, -50%);
    cursor: pointer;
  }
}

input[type="number"] {
  padding: $input-padding;
  border-radius: $input-border-radius;
  border: 1px solid $input-border-color;
  font-size: $input-font-size;
  line-height: $input-line-height;
  color: $input-font-color;
  transition: box-shadow 0.3s;

  &::placeholder{
    color: $input-placeholder-font-color;
  }

  &:focus {
    @include input-focus($input-focus-border-color)
  }

  -moz-appearance: textfield;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.label-input {
  font-size: $input-label-font-size;
  line-height: $input-label-line-height;
  color: $input-label-font-color;
}

.flex-row {
  display: flex;
  flex-direction: row;
  gap: $spacing-4;
  align-items:center;
}

.flex-column {
  display: flex;
  flex-direction: column;
  gap: $spacing-4;
}
