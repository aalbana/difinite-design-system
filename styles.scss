// Imports
@import './design-token/border-radius.scss';
@import './design-token/color.scss';
@import './design-token/shadow.scss';
@import './design-token/spacing.scss';
@import './design-token/typography.scss';
@import './design-token/sizing.scss';

@import './reset.css';

body {
  font-family: $font-family;
}

// Button Component =========================================
.button {
  display: flex;
  padding: $button-padding;
  justify-content: center;
  align-items: center;
  gap: $spacing-2;
  cursor: pointer;
  font-weight: $button-font-weight;
  line-height: $button-medium-line-height;
  border-radius: $button-border-radius;

  transition: background-color 0.3s, box-shadow 0.3s;

  i,
  svg {
    font-size: $button-icon-font-size;
  }
}

i {
  vertical-align: middle;
}

@mixin button-focus($focus-color) {
  outline: 1px $focus-color;
  box-shadow: 0px 0px 0px 4px rgba($focus-color, $opacity-50);
}

@mixin button-style($background-color, $text-color) {
  background-color: $background-color;
  color: $text-color;
}

// Button Color Variant

$button-variants: (
  primary: (
    background-color: $button-primary-background-color,
    hover-background-color: $button-primary-hover-background-color,
    active-background-color: $button-primary-active-background-color,
    focus-border-color: $button-primary-focus-border-color,

    disabled-background-color: $button-primary-disabled-background-color,

    outline-border-color: $button-primary-outline-border-color,
    outline-text-color: $button-primary-outline-text-color,
    outline-hover-background-color:
      $button-primary-outline-hover-background-color,
    outline-hover-border-color: $button-primary-outline-hover-border-color,

    outline-disabled-text-color: $button-primary-outline-disabled-text-color,
    outline-disabled-border-color: $button-primary-outline-disabled-border-color,

    link-text-color: $button-primary-link-text-color,
    link-hover-text-color: $button-primary-link-hover-text-color,
    link-active-text-color: $button-primary-link-active-text-color,
  ),
  secondary: (
    background-color: $button-secondary-background-color,
    hover-background-color: $button-secondary-hover-background-color,
    active-background-color: $button-secondary-active-background-color,
    focus-border-color: $button-secondary-focus-border-color,

    disabled-background-color: $button-secondary-disabled-background-color,

    outline-border-color: $button-secondary-outline-border-color,
    outline-text-color: $button-secondary-outline-text-color,
    outline-hover-background-color:
      $button-secondary-outline-hover-background-color,
    outline-hover-border-color: $button-secondary-outline-hover-border-color,

    outline-disabled-text-color: $button-secondary-outline-disabled-text-color,
    outline-disabled-border-color:
      $button-secondary-outline-disabled-border-color,

    link-text-color: $button-secondary-link-text-color,
    link-hover-text-color: $button-secondary-link-hover-text-color,
    link-active-text-color: $button-secondary-link-active-text-color,
  ),
  success: (
    background-color: $button-success-background-color,
    hover-background-color: $button-success-hover-background-color,
    active-background-color: $button-success-active-background-color,

    disabled-background-color: $button-success-disabled-background-color,

    focus-border-color: $button-success-focus-border-color,
    outline-border-color: $button-success-outline-border-color,
    outline-text-color: $button-success-outline-text-color,
    outline-hover-background-color:
      $button-success-outline-hover-background-color,
    outline-hover-border-color: $button-success-outline-hover-border-color,

    outline-disabled-text-color: $button-success-outline-disabled-text-color,
    outline-disabled-border-color: $button-success-outline-disabled-border-color,

    link-text-color: $button-success-link-text-color,
    link-hover-text-color: $button-success-link-hover-text-color,
    link-active-text-color: $button-success-link-active-text-color,
  ),
  warning: (
    background-color: $button-warning-background-color,
    hover-background-color: $button-warning-hover-background-color,
    active-background-color: $button-warning-active-background-color,
    focus-border-color: $button-warning-focus-border-color,

    disabled-background-color: $button-warning-disabled-background-color,

    outline-border-color: $button-warning-outline-border-color,
    outline-text-color: $button-warning-outline-text-color,
    outline-hover-background-color:
      $button-warning-outline-hover-background-color,
    outline-hover-border-color: $button-warning-outline-hover-border-color,

    outline-disabled-text-color: $button-warning-outline-disabled-text-color,
    outline-disabled-border-color: $button-warning-outline-disabled-border-color,

    link-text-color: $button-warning-link-text-color,
    link-hover-text-color: $button-warning-link-hover-text-color,
    link-active-text-color: $button-warning-link-active-text-color,
  ),
  danger: (
    background-color: $button-danger-background-color,
    hover-background-color: $button-danger-hover-background-color,
    active-background-color: $button-danger-active-background-color,
    focus-border-color: $button-danger-focus-border-color,

    disabled-background-color: $button-danger-disabled-background-color,

    outline-border-color: $button-danger-outline-border-color,
    outline-text-color: $button-danger-outline-text-color,
    outline-hover-background-color:
      $button-danger-outline-hover-background-color,
    outline-hover-border-color: $button-danger-outline-hover-border-color,

    outline-disabled-text-color: $button-danger-outline-disabled-text-color,
    outline-disabled-border-color: $button-danger-outline-disabled-border-color,

    link-text-color: $button-danger-link-text-color,
    link-hover-text-color: $button-danger-link-hover-text-color,
    link-active-text-color: $button-danger-link-active-text-color,
  ),
);

.button {
  @include button-style(
    map-get(map-get($button-variants, primary), background-color),
    $button-text-color
  );
  border: none;

  &:hover {
    background-color: map-get(
      map-get($button-variants, primary),
      hover-background-color
    );
  }

  &:active {
    background-color: map-get(
      map-get($button-variants, primary),
      active-background-color
    );
  }

  &:focus-visible {
    @include button-focus(
      map-get(map-get($button-variants, primary), focus-border-color)
    );
  }
}

@each $variant, $styles in $button-variants {
  .button.button-#{$variant} {
    @include button-style(
      map-get($styles, background-color),
      $button-text-color
    );
    border: none;

    &:hover {
      background-color: map-get($styles, hover-background-color);
    }

    &:active {
      background-color: map-get($styles, active-background-color);
    }

    &:focus-visible {
      @include button-focus(map-get($styles, focus-border-color));
    }
  }
}

//Button Outline Style
.button.button-outline {
  @include button-style(transparent, $button-primary-outline-text-color);
  border: 1px solid $button-primary-outline-border-color;

  &:hover {
    background-color: $button-primary-outline-hover-background-color;
    color: $button-text-color;
    border: 1px solid $button-primary-outline-hover-border-color;

    i,
    svg {
      color: $button-text-color;
    }
  }

  &:active {
    background-color: $button-primary-active-background-color;
    color: $button-text-color;
  }

  &:focus-visible {
    @include button-focus($button-primary-focus-border-color);
  }

  i,
  svg {
    color: $button-primary-outline-text-color;
    font-size: $button-icon-font-size;
  }
}

@each $variant, $style in $button-variants {
  .button.button-#{$variant}.button-outline {
    @include button-style(transparent, map-get($style, outline-text-color));
    border: 1px solid map-get($style, outline-border-color);

    &:hover {
      background-color: map-get($style, outline-hover-background-color);
      color: $button-text-color;
      border: 1px solid map-get($style, outline-hover-border-color);

      i,
      svg {
        color: $button-text-color;
      }
    }

    &:active {
      background-color: map-get($style, active-background-color);
      color: $button-text-color;
    }

    &:focus-visible {
      @include button-focus(map-get($style, focus-border-color));
    }

    i,
    svg {
      color: map-get($style, outline-text-color);
      font-size: $button-icon-font-size;
    }
  }
}

// Button Sizes
$button-sizes: (
  sm: (
    font-size: $button-small-font-size,
    line-height: $button-small-line-height,
    square-size: $button-square-small-size,
  ),
  md: (
    font-size: $button-medium-font-size,
    line-height: $button-medium-line-height,
    square-size: $button-square-medium-size,
  ),
  lg: (
    font-size: $button-large-font-size,
    line-height: $button-large-line-height,
    square-size: $button-square-large-size,
  ),
);

.button {
  font-size: map-get(map-get($button-sizes, md), font-size);
  line-height: map-get(map-get($button-sizes, md), line-height);
}

@each $size, $style in $button-sizes {
  .button.button-#{$size} {
    font-size: map-get($style, font-size);
    line-height: map-get($style, line-height);
  }
}

// Square Button for Icon Only

.button-square {
  width: map-get(map-get($button-sizes, md), square-size);
  height: map-get(map-get($button-sizes, md), square-size);
}

@each $size, $style in $button-sizes {
  .button-square.button-#{$size} {
    width: map-get($style, square-size);
    height: map-get($style, square-size);
  }
}

// Disabled Button
.button.disabled,
.button:disabled {
  @include button-style(
    $button-primary-disabled-background-color,
    $button-text-color
  );
  border: none;
  cursor: not-allowed;
  pointer-events: none;
  box-shadow: none;

  &:hover {
    @include button-style(
      $button-primary-disabled-background-color,
      $button-text-color
    );
  }
}

@each $variant, $style in $button-variants {
  .button.button-#{$variant}.disabled,
  .button.button-#{$variant}:disabled {
    @include button-style(
      map-get($style, disabled-background-color),
      $button-text-color
    );
    border: none;
    cursor: not-allowed;
    box-shadow: none;

    &:hover {
      @include button-style(
        map-get($style, disabled-background-color),
        $button-text-color
      );
    }
  }
}

// Disabled Outlined Button

.button.button-outline.disabled,
.button.button.button-outline:disabled {
  @include button-style(
    transparent,
    $button-primary-outline-disabled-text-color
  );
  border: 1px solid $button-primary-outline-disabled-border-color;
  cursor: not-allowed;
  box-shadow: none;
}

@each $variant, $style in $button-variants {
  .button.button-#{$variant}.button-outline.disabled,
  .button.button-#{$variant}.button-outline:disabled {
    @include button-style(
      transparent,
      map-get($style, outline-disabled-text-color)
    );
    border: 1px solid map-get($style, outline-disabled-border-color);
    cursor: not-allowed;
    box-shadow: none;
  }
}

// Link Button;

.button-link,
.button.button-link {
  @include button-style(transparent, $button-primary-link-text-color);
  border: none;

  &:hover {
    color: $button-primary-link-hover-text-color;
    background-color: transparent;
  }

  &:active {
    color: $button-primary-link-active-text-color;
  }

  &:focus {
    border: none;
    box-shadow: none;
  }
}

@each $variant, $style in $button-variants {
  .button.button-#{$variant}.button-link,
  .button-#{$variant}.button-link {
    @include button-style(transparent, map-get($style, link-text-color));
    border: none;

    &:hover {
      color: map-get($style, link-hover-text-color);
      background-color: transparent;
    }

    &:active {
      color: map-get($style, link-active-text-color);
    }

    &:focus {
      border: none;
      box-shadow: none;
    }
  }
}

// <a> Link style

a,
a .link {
  color: $button-primary-link-text-color;

  &:hover {
    color: $link-primary-hover-text-color;
    cursor: pointer;
  }

  &:active {
    color: $link-primary-active-text-color;
  }
}

// Input Field ====================================

@mixin input-focus($focus-color) {
  border: 1px solid $focus-color;
  outline: 1px solid $focus-color;
  box-shadow: 0px 0px 0px 4px rgba($focus-color, $opacity-50);
}

@mixin input-style() {
  padding: $input-padding;
  border-radius: $input-border-radius;
  font-size: $input-font-size;
  line-height: $input-line-height;
  color: $input-text-color;
  transition: box-shadow 0.3s;
  width: 100%;
  box-sizing: border-box;
  background-color: $input-background-color;

  &::placeholder {
    color: $input-placeholder-text-color;
  }
}

@mixin input-validation-style($border-color, $focus-color) {
  border: 1px solid $border-color;

  &:focus {
    @include input-focus($focus-color);
  }
}

.form-input,
input[type='text'],
input[type='password'],
input[type='number'],
input[type='email'],
textarea {
  @include input-style();
  @include input-validation-style($input-border-color, $input-focus-color);

  &:invalid,
  &.input-invalid {
    @include input-validation-style(
      $input-danger-border-color,
      $input-danger-focus-color
    );
  }

  &:disabled,
  &.disabled {
    background-color: $input-disabled-background-color;
    color: $input-disabled-text-color;
    cursor: not-allowed;
    pointer-events: none;

    &:focus {
      box-shadow: none;
    }
  }
}

input[type='password'] {
  padding-right: $password-input-right-padding;
}

.input-control {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  width: 100%;

  i,
  svg,
  img {
    position: absolute;
    color: $input-text-color;
    right: 12px;
    top: 50%;
    transform: translate(0, -50%);
    cursor: pointer;
  }
}

.label-input {
  font-size: $input-label-font-size;
  line-height: $input-label-line-height;
  color: $input-label-text-color;
  display: block;
  margin-bottom: $input-label-margin-bottom;
}

.input-helper-text {
  font-size: $input-helper-text-font-size;
  font-weight: $input-helper-text-font-weight;
  line-height: $input-helper-text-line-height;
  color: $input-helper-text-color;
  margin-top: $input-helper-text-top-padding;
}

.input-feedback-invalid {
  font-size: $input-feedback-text-font-size;
  font-weight: $input-feedback-text-font-weight;
  line-height: $input-feedback-text-line-height;
  color: $input-feedback-text-color;
  margin-top: $input-helper-text-top-padding;
}

// Radio Button

.radio {
  input[type='radio'] {
    position: absolute;
    opacity: 0;

    + .radio-label {
      display: flex;
      align-items: center;
      position: relative;
      font-size: $radio-button-font-size;
      font-weight: $radio-button-font-weight;
      line-height: $radio-button-line-height;
      color: $radio-button-text-color;
    }

    + .radio-label::before {
      content: '';
      background: $radio-button-background-color;
      box-sizing: border-box;
      border-radius: $radio-button-border-radius;
      border: 1px solid $radio-button-border-color;
      display: inline-flex;
      width: $radio-button-size;
      height: $radio-button-size;
      position: relative;
      margin-right: $radio-button-margin-right;
      vertical-align: top;
      cursor: pointer;
      text-align: center;
      transition: all 0.3s ease;
    }

    + .radio-label::after {
      content: '';
      width: $radio-button-check-size;
      height: $radio-button-check-size;
      background-color: transparent;
      position: absolute;
      left: $spacing-1;
      border-radius: $radio-button-check-border-radius;
      transition: background-color 0.3s ease;
    }

    &:checked + .radio-label::before {
      background-color: $base-white;
      border: 1px solid $radio-button-checked-border-color;
    }

    &:checked + .radio-label::after {
      background-color: $radio-button-check-color;
    }

    &:focus + .radio-label::before {
      @include input-focus($radio-button-focus-color);
    }

    &:checked:disabled + .radio-label::before {
      border-color: $radio-button-disabled-border-color;
      background: $radio-button-disabled-background-color;
    }

    &:checked:disabled + .radio-label::after {
      background-color: $radio-button-disabled-check-color;
    }

    &:disabled + .radio-label::before {
      border-color: $radio-button-disabled-border-color;
      background: $radio-button-disabled-background-color;
    }
  }
}

// Checkbox

.checkbox {
  input[type='checkbox'] {
    position: absolute;
    opacity: 0;

    + .checkbox-label {
      font-size: $checkbox-font-size;
      font-weight: $checkbox-font-weight;
      line-height: $checkbox-line-height;
      color: $checkbox-text-color;
    }

    + .checkbox-label::before {
      content: '';
      background: $checkbox-background-color;
      box-sizing: border-box;
      border-radius: $checkbox-border-radius;
      border: 1px solid $checkbox-border-color;
      display: inline-flex;
      width: $checkbox-button-size;
      height: $checkbox-button-size;
      position: relative;
      margin-right: $checkbox-margin-right;
      vertical-align: top;
      cursor: pointer;
      text-align: center;
      transition: box-shadow 0.3s ease;
    }

    &:checked + .checkbox-label::before {
      content: '\F272';
      font-family: 'bootstrap-icons';
      align-items: center;
      font-size: $checkbox-icon-size;
      justify-content: center;
      color: $base-white;
      background-color: $checkbox-checked-background-color;
      border: 1px solid $checkbox-checked-border-color;
    }

    &:focus + .checkbox-label::before {
      @include input-focus($checkbox-checked-border-color);
    }

    &:checked:disabled + .checkbox-label::before {
      font-family: 'bootstrap-icons';
      align-items: center;
      font-size: 16px;
      justify-content: center;
      color: $checkbox-disabled-color;
      border-color: $checkbox-disabled-border-color;
      background: $checkbox-disabled-background-color;
    }

    &:disabled + .checkbox-label::before {
      border-color: $checkbox-disabled-border-color;
      background: $checkbox-disabled-background-color;
    }
  }
}

// Toggle
.toggle {
  input[type='checkbox'] {
    position: absolute;
    opacity: 0;

    + .toggle-label {
      position: relative;
      display: flex;
      font-size: $font-size-2xs;
      font-weight: $font-weight-regular;
      line-height: $line-height-2xs;
      color: $toggle-text-color;
      align-items: center;
    }

    + .toggle-label::before {
      content: '';
      width: $toggle-width-size;
      height: $toggle-height-size;
      background-color: $toggle-background-color;
      border-radius: $toggle-border-radius;
      margin-right: $toggle-margin-right;
      transition: background-color 0.3s ease;
      cursor: pointer;
    }

    + .toggle-label::after {
      content: '';
      position: absolute;
      width: $toggle-circle-size;
      height: $toggle-circle-size;
      background-color: $toggle-circle-background-color;
      border-radius: $toggle-circle-border-radius;
      left: $spacing-0_5;
      box-shadow: $toggle-circle-shadow;
      transition: transform 0.3s ease;
      cursor: pointer;
    }

    &:checked + .toggle-label::before {
      background-color: $toggle-checked-background-color;
    }

    &:checked + .toggle-label::after {
      transform: translateX(100%);
    }

    &:focus + .toggle-label::before {
      @include input-focus($toggle-focus-color);
    }

    &:disabled + .toggle-label::after {
      background-color: $toggle-disabled-circle-color;
      cursor: default;
    }

    &:checked:disabled + .toggle-label::after {
      background-color: $toggle-disabled-circle-color;
      cursor: default;
    }

    &:disabled + .toggle-label::before {
      cursor: default;
    }

    &:checked:disabled + .toggle-label::before {
      cursor: default;
      background-color: $toggle-disabled-background-color;
    }
  }
}

// Select

.select-input-container {
  display: inline-block;
  position: relative;
  width: 100%;

  &:focus-within > .select-input-value {
    @include input-focus($radio-button-focus-color);
  }

  &:focus-visible > .select-input-value {
    outline: none;
    border: none;
  }

  &.disabled {
    cursor: not-allowed;
    pointer-events: none;

    &:focus {
      box-shadow: none;
    }
  }

  &.disabled > .select-input-value {
    background-color: $input-disabled-background-color;
    color: $input-disabled-text-color;
  }
}

.select-input-value {
  display: flex;
  align-items: center;
  justify-content: space-between;
  @include input-style();
  padding-right: 32px;
  border: 1px solid $select-border-color;
  cursor: pointer;
  user-select: none;

  &.custom-placeholder {
    color: $input-placeholder-text-color;
  }

  &::after {
    content: '\F282';
    font-family: 'bootstrap-icons';
    right: 8px;
    position: absolute;
    align-items: center;
    font-size: $select-icon-size;
    color: $select-icon-color;
  }

  &:focus-visible {
    outline: none;
    border: none;
  }
}

.select-input-options {
  display: none;
  position: absolute;
  padding: 0;
  margin: 0;
  border: 1px solid $select-options-list-border-color;
  border-radius: $select-options-list-border-radius;
  width: 100%;
  max-height: $select-options-list-max-height;
  overflow-y: auto;
  margin: $select-options-list-margin;
  z-index: 1;
  box-shadow: $select-options-list-shadow;

  &:focus-visible {
    outline: none;
    border: none;
  }
}

.select-input-options.show {
  display: block;
}

.select-input-option {
  background-color: $select-option-background-color;
  position: relative;
  padding: $select-option-padding;
  align-items: center;
  font-size: $select-input-font-size;
  font-weight: $select-input-font-weight;
  line-height: $select-input-line-height;
  color: $select-option-text-color;
  cursor: pointer;

  &.selected::before {
    content: '';
    position: absolute;
    top: 0px;
    left: 0px;
    height: 100%;
    width: 4px;
    background-color: $primary-500;
  }

  &.disabled {
    color: $select-option-disabled-text-color;
    cursor: not-allowed;
    pointer-events: none;
  }
}

.select-input-option:hover {
  background-color: $select-option-hover-background-color;
}

// Multiple select

.multiple-select-container {
  display: inline-block;
  position: relative;
  width: 100%;

  &:focus-within > .multiple-select-value {
    @include input-focus($radio-button-focus-color);
  }

  &:focus-visible > .multiple-select-value {
    outline: none;
    border: none;
  }

  &.disabled {
    cursor: not-allowed;
    pointer-events: none;

    &:focus {
      box-shadow: none;
    }
  }

  &.disabled > .multiple-select-value {
    background-color: $input-disabled-background-color;
    color: $input-disabled-text-color;
  }
}

.multiple-select-value > .custom-placeholder {
  color: $input-placeholder-text-color;
}

.multiple-select-value {
  display: flex;
  align-items: center;
  @include input-style();
  padding-right: 32px;
  border: 1px solid $select-border-color;
  cursor: pointer;
  user-select: none;
  position: relative;
  gap: 8px;
  flex-wrap: wrap;

  &::after {
    content: '\F282';
    font-family: 'bootstrap-icons';
    right: 8px;
    position: absolute;
    align-items: center;
    font-size: $select-icon-size;
    color: $select-icon-color;
  }

  &:focus-visible {
    outline: none;
    border: none;
  }
}

.option-selected {
  box-sizing: border-box;
  display: flex;
  padding: 2px 4px;
  align-items: center;
  gap: 8px;
  border-radius: 2px;
  border: 1px solid $neutral-200;
  background: $neutral-50;
  color: $neutral-700;
  font-size: $font-size-3xs;
  line-height: $line-height-3xs;
  max-height: 20px;

  &i {
    font-size: 10px;
  }
}

.multiple-select-options {
  display: none;
  position: absolute;
  padding: 0;
  margin: 0;
  border: 1px solid $select-options-list-border-color;
  border-radius: $select-options-list-border-radius;
  width: 100%;
  max-height: $select-options-list-max-height;
  overflow-y: auto;
  margin: $select-options-list-margin;
  z-index: 1;
  box-shadow: $select-options-list-shadow;

  &:focus-visible {
    outline: none;
    border: none;
  }
}

.multiple-select-options.show {
  display: block;
}

.multiple-select-option {
  background-color: $select-option-background-color;
  position: relative;
  padding: $select-option-padding;
  align-items: center;
  font-size: $select-input-font-size;
  font-weight: $select-input-font-weight;
  line-height: $select-input-line-height;
  color: $select-option-text-color;
  cursor: pointer;

  &.selected::before  {
    content: '';
    position: absolute;
    top: 0px;
    left: 0px;
    height: 100%;
    width: 4px;
    background-color: $primary-500;
  }

  &.disabled {
    color: $select-option-disabled-text-color;
    cursor: not-allowed;
    pointer-events: none;
  }
}

.multiple-select-option:hover {
  background-color: $select-option-hover-background-color;
}

.flex-row {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.flex-column {
  display: flex;
  flex-direction: column;
}
