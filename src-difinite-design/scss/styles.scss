// Reset CSS
@import '../css/reset.css';

// Import Tokens
@import './design-token/border-radius.scss';
@import './design-token/color.scss';
@import './design-token/shadow.scss';
@import './design-token/spacing.scss';
@import './design-token/typography.scss';
@import './design-token/sizing.scss';

// Import Components
@import './components/input-fields.scss';
@import './components/buttons.scss';
@import './components/radio-buttons.scss';
@import './components/checkboxes.scss';
@import './components/toggles.scss';
@import './components/selects.scss';
@import './components/multiple-select.scss';
@import './components/datepicker.scss';
@import './components/file-upload.scss';
@import './components/timepicker.scss';
@import './components/datetimepicker.scss';
@import './components/sidebar.scss';
@import './components/navbar.scss';
@import './components/alert.scss';
@import './components/card.scss';

// Reset border-box
*,
*::after,
*::before {
  box-sizing: border-box;
}

// Set Default Font
body {
  font-family: $font-family;
}

// Containers
$containers: (
  sm: (
    breakpoint: 576px,
    max-width: 544px,
    margin-x: 16px,
  ),
  md: (
    breakpoint: 768px,
    max-width: 720px,
  ),
  lg: (
    breakpoint: 992px,
    max-width: 960px,
  ),
  xl: (
    breakpoint: 1200px,
    max-width: 1140px,
  ),
  2xl: (
    breakpoint: 1400px,
    max-width: 1320px,
  ),
);

@mixin container-max-widths($breakpoints...) {
  @each $breakpoint in $breakpoints {
    $container: map-get($containers, $breakpoint);

    @if $breakpoint == null {
      max-width: map-get($container, max-width);
      margin-left: map-get($container, margin-x, 0);
      margin-right: map-get($container, margin-x, 0);
    } @else {
      @media (min-width: map-get($container, breakpoint)) {
        max-width: map-get($container, max-width);
        margin-left: map-get($container, margin-x, 0);
        margin-right: map-get($container, margin-x, 0);
      }
    }
  }
}

.dfn-container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  max-height: 100vh;

  @include container-max-widths(sm, md, lg, xl, 2xl);

  .container-sm {
    width: 100%;
    margin-right: auto;
    margin-left: auto;

    @include container-max-widths(sm);
  }
  .container-md {
    width: 100%;
    margin-right: auto;
    margin-left: auto;

    @include container-max-widths(md);
  }

  .container-lg {
    width: 100%;
    margin-right: auto;
    margin-left: auto;

    @include container-max-widths(lg);
  }

  .container-xl {
    width: 100%;
    margin-right: auto;
    margin-left: auto;

    @include container-max-widths(xl);
  }

  .container-2xl {
    width: 100%;
    margin-right: auto;
    margin-left: auto;

    @include container-max-widths(2xl);
  }
}

.dfn-content {
  padding-left: 256px;
  width: 100%;
  padding-top: 0 !important;
  transition: 0.5s;
  position: relative;
  min-height: 100vh;
  overflow: hidden;
}

.dfn-content > .dfn-navbar {
  position: sticky;

  .dfn-navbar-container {
    .dfn-navbar-end-content {
      .dfn-input-container {
        margin-bottom: $spacing-0;
      }
    }
  }
}
// Spacing classes

$spacing-tokens: (
  0: $spacing-0,
  0_5: $spacing-0_5,
  1: $spacing-1,
  1_5: $spacing-1_5,
  2: $spacing-2,
  2_5: $spacing-2_5,
  3: $spacing-3,
  3_5: $spacing-3_5,
  4: $spacing-4,
  5: $spacing-5,
  6: $spacing-6,
  7: $spacing-7,
  8: $spacing-8,
  9: $spacing-9,
  10: $spacing-10,
  11: $spacing-11,
  12: $spacing-12,
  14: $spacing-14,
  16: $spacing-16,
  20: $spacing-20,
  24: $spacing-24,
  32: $spacing-32,
  40: $spacing-40,
  48: $spacing-48,
  56: $spacing-56,
  60: $spacing-60,
);

@each $size, $value in $spacing-tokens {
  .m-#{$size} {
    margin: $value !important;
  }

  .mt-#{$size} {
    margin-top: $value !important;
  }

  .mb-#{$size} {
    margin-bottom: $value !important;
  }

  .mr-#{$size} {
    margin-right: $value !important;
  }

  .ml-#{$size} {
    margin-left: $value !important;
  }

  .mx-#{$size} {
    margin-left: $value !important;
    margin-right: $value !important;
  }

  .my-#{$size} {
    margin-top: $value !important;
    margin-bottom: $value !important;
  }
}

@each $size, $value in $spacing-tokens {
  .p-#{$size} {
    padding: $value !important;
  }

  .pt-#{$size} {
    padding-top: $value !important;
  }

  .pb-#{$size} {
    padding-bottom: $value !important;
  }

  .pr-#{$size} {
    padding-right: $value !important;
  }

  .pl-#{$size} {
    padding-left: $value !important;
  }

  .px-#{$size} {
    padding-left: $value !important;
    padding-right: $value !important;
  }

  .py-#{$size} {
    padding-top: $value !important;
    padding-bottom: $value !important;
  }
}

@each $size, $value in $spacing-tokens {
  .gap-#{$size} {
    gap: $value !important;
  }
}

.dfn-check-container,
.dfn-check-container.vertical {
  display: flex;
  flex-direction: column;
  & > * {
    margin-bottom: $spacing-2;
  }

  &.horizontal {
    flex-direction: row;
    flex-wrap: wrap;
    & > * {
      margin-right: $spacing-4;
    }
  }
}

// Grid System
$grid-columns: 12;
$grid-gutter-width: 0;

// Gap utility classes
@each $size, $value in $spacing-tokens {
  .gap-#{$size} {
    gap: $value !important;
  }
}

// Gutter utility classes for Row
@each $size, $value in $spacing-tokens {
  .gutter-#{$size}.dfn-row {
    margin-right: calc($value / -2);
    margin-left: calc($value / -2);

    & > * {
      padding-right: calc($value / 2);
      padding-left: calc($value / 2);
    }
  }
}

// Container
.dfn-container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: calc($grid-gutter-width / 2);
  padding-left: calc($grid-gutter-width / 2);

  // Container max widths mixin
  @include container-max-widths(sm, md, lg, xl, 2xl);
}

.dfn-container-fluid {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

// Row
.dfn-row {
  margin-right: calc($grid-gutter-width / -2);
  margin-left: calc($grid-gutter-width / -2);
  display: flex;
  flex-wrap: wrap;
}

// Generic Column
.dfn-col {
  display: flex;
  flex-direction: column;
  flex: 1 0 calc(100% / #{$grid-columns} - #{$grid-gutter-width});
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
  padding-left: calc($grid-gutter-width / 2);
  padding-right: calc($grid-gutter-width / 2);
}

// Specific Columns
@for $i from 1 through $grid-columns {
  .dfn-col-#{$i} {
    flex: 0 0 auto;
    width: calc($i / $grid-columns * 100%);
    max-width: calc($i / $grid-columns * 100%);
    padding-right: calc($grid-gutter-width / 2);
    padding-left: calc($grid-gutter-width / 2);
  }
}

::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-thumb {
  background-color: $neutral-200;
  border-radius: 8px;
  position: absolute;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar-corner {
  background-color: transparent;
}
